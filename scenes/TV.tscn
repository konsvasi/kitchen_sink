[gd_scene load_steps=22 format=2]

[ext_resource path="res://scenes/TV.gd" type="Script" id=1]
[ext_resource path="res://environment/TV.png" type="Texture" id=2]
[ext_resource path="res://utils/white_noise_1.png" type="Texture" id=3]
[ext_resource path="res://utils/white_noise_2.png" type="Texture" id=4]
[ext_resource path="res://utils/white_noise_3.png" type="Texture" id=5]
[ext_resource path="res://utils/light.png" type="Texture" id=6]
[ext_resource path="res://items/hot_sauce.png" type="Texture" id=7]
[ext_resource path="res://utils/tv_remote.png" type="Texture" id=8]
[ext_resource path="res://scenes/HUD.tscn" type="PackedScene" id=9]
[ext_resource path="res://environment/terry.png" type="Texture" id=10]
[ext_resource path="res://utils/infrared_active.png" type="Texture" id=11]
[ext_resource path="res://utils/infrared.png" type="Texture" id=12]
[ext_resource path="res://audio/A cup of tea.ogg" type="AudioStream" id=13]

[sub_resource type="RectangleShape2D" id=1]

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;
render_mode unshaded;
uniform float scanLineCount : hint_range(0, 1080) = 50.0;

vec2 uv_curve(vec2 uv) {
	uv = (uv - 0.5) * 2.0;
	uv.x *= uv.y;
	uv = (uv / 2.0) + 0.5;
	return uv;
}


void fragment() {
	float PI = 3.14159;
	vec4 color = texture(TEXTURE, uv_curve(UV));
	
	float r = texture(TEXTURE, uv_curve(UV) + vec2(SCREEN_PIXEL_SIZE.x * 1.0), 0.0).r;
	float g = texture(TEXTURE, uv_curve(UV) + vec2(SCREEN_PIXEL_SIZE.x * 3.0), 0.0).g;
	float b = texture(TEXTURE, uv_curve(UV) + vec2(SCREEN_PIXEL_SIZE.x * 2.0), 0.0).b;
	
	float s = sin(uv_curve(UV).y * scanLineCount * PI * 2.0);
	s = (s * 0.5 + 0.5) * 0.9 + 0.1;
	
	vec4 scanLine = vec4(vec3(pow(s, 0.25)), 1.0);
	COLOR = vec4(r,g,b, 1.0) * scanLine;
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/scanLineCount = 200.0

[sub_resource type="SpriteFrames" id=4]
animations = [ {
"frames": [ ExtResource( 3 ), ExtResource( 4 ), ExtResource( 5 ) ],
"loop": true,
"name": "default",
"speed": 6.0
} ]

[sub_resource type="OccluderPolygon2D" id=5]
polygon = PoolVector2Array( 646.618, 610.241, 702.211, 610.241, 702.211, 615.056, 646.181, 615.056 )

[sub_resource type="OccluderPolygon2D" id=6]
polygon = PoolVector2Array( 21.9713, -7.66553, 24.1599, 64.1229, -23.9909, 63.2474, -24.4286, -5.03912 )

[sub_resource type="OccluderPolygon2D" id=7]
polygon = PoolVector2Array( 325.767, 631.023, 921.16, 631.023, 922.535, 665.399, 908.785, 668.149, 906.035, 688.774, 859.283, 692.9, 862.034, 661.274, 389.019, 670.899, 389.019, 688.774, 343.642, 688.774, 342.267, 666.774, 327.142, 665.399 )

[sub_resource type="RectangleShape2D" id=8]

[node name="TV" type="Node"]
script = ExtResource( 1 )

[node name="TVMain" type="Node2D" parent="."]
z_index = 1

[node name="Background" type="Sprite" parent="TVMain"]
position = Vector2( 642.036, 362.376 )
texture = ExtResource( 2 )

[node name="InfraredPoint" type="Area2D" parent="TVMain"]
position = Vector2( 646.635, 424.128 )
__meta__ = {
"_edit_group_": true
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="TVMain/InfraredPoint"]
shape = SubResource( 1 )

[node name="default" type="Sprite" parent="TVMain/InfraredPoint"]
scale = Vector2( 0.15, 0.15 )
texture = ExtResource( 12 )

[node name="active" type="Sprite" parent="TVMain/InfraredPoint"]
visible = false
scale = Vector2( 0.15, 0.15 )
texture = ExtResource( 11 )

[node name="WhiteNoise" type="AnimatedSprite" parent="TVMain"]
visible = false
material = SubResource( 3 )
position = Vector2( 642.937, 355.553 )
scale = Vector2( 11.8421, 7.64045 )
frames = SubResource( 4 )
frame = 2
playing = true

[node name="Light2D" type="Light2D" parent="TVMain"]
position = Vector2( 642.374, 370.304 )
scale = Vector2( 0.5555, 0.5555 )
texture = ExtResource( 6 )
shadow_enabled = true
shadow_color = Color( 0, 0, 0, 1 )

[node name="LightOccluder2D" type="LightOccluder2D" parent="TVMain"]
occluder = SubResource( 5 )

[node name="Sprite2" type="Sprite" parent="TVMain"]
position = Vector2( 521.342, 541.04 )
texture = ExtResource( 7 )

[node name="LightOccluder2D" type="LightOccluder2D" parent="TVMain/Sprite2"]
occluder = SubResource( 6 )

[node name="LightOccluder2D2" type="LightOccluder2D" parent="TVMain"]
occluder = SubResource( 7 )

[node name="Tween" type="Tween" parent="TVMain"]

[node name="Terry" type="Sprite" parent="TVMain"]
visible = false
position = Vector2( 638.469, 250.558 )
texture = ExtResource( 10 )

[node name="Tween" type="Tween" parent="TVMain/Terry"]

[node name="TerryTimer" type="Timer" parent="TVMain"]
one_shot = true

[node name="TVRemote" type="KinematicBody2D" parent="TVMain"]
z_index = 1

[node name="Sprite" type="Sprite" parent="TVMain/TVRemote"]
position = Vector2( 303.962, 448.706 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 8 )

[node name="Area2D" type="Area2D" parent="TVMain/TVRemote"]
position = Vector2( 364.954, 219.879 )
__meta__ = {
"_edit_group_": true
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="TVMain/TVRemote/Area2D"]
shape = SubResource( 8 )

[node name="VisibilityNotifier2D" type="VisibilityNotifier2D" parent="TVMain/TVRemote"]
position = Vector2( 374.4, 433.371 )
scale = Vector2( 5.25143, 11.6971 )

[node name="Lofi" type="AudioStreamPlayer" parent="TVMain"]
stream = ExtResource( 13 )
volume_db = -11.471

[node name="pitchTween" type="Tween" parent="TVMain/Lofi"]

[node name="TripTimer" type="Timer" parent="TVMain"]
wait_time = 3.0

[node name="HUD" parent="." instance=ExtResource( 9 )]
[connection signal="area_entered" from="TVMain/InfraredPoint" to="." method="_on_InfraredPoint_area_entered"]
[connection signal="area_exited" from="TVMain/InfraredPoint" to="." method="_on_InfraredPoint_area_exited"]
[connection signal="tween_completed" from="TVMain/Tween" to="." method="_on_Tween_tween_completed"]
[connection signal="tween_completed" from="TVMain/Terry/Tween" to="." method="_on_Tween_tween_completed"]
[connection signal="timeout" from="TVMain/TerryTimer" to="." method="_on_TerryTimer_timeout"]
[connection signal="screen_exited" from="TVMain/TVRemote/VisibilityNotifier2D" to="." method="_on_VisibilityNotifier2D_screen_exited"]
[connection signal="timeout" from="TVMain/TripTimer" to="." method="_on_TripTimer_timeout"]
[connection signal="dialogFinished" from="HUD" to="." method="_on_HUD_dialogFinished"]
[connection signal="notificationClosed" from="HUD" to="." method="_on_HUD_notificationClosed"]
